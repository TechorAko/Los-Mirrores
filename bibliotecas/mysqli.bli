<?php

class bancodedados {

    // Host, Usuário, Senha, Banco de Dados e Conexão.

    public $host;
    public $uname;
    public $pwd;
    public $database;
    public $con;

    public $tabelas; // Nome das tabelas disponíveis no banco de dados.

    function __construct($host, $uname, $pwd, $database) { // Construtor do objeto.
        // Ao criar o objeto, a conexão será feita.
        $this->host     = $host;
        $this->uname    = $uname;
        $this->pwd      = $pwd;
        $this->database = $database;
        $this->con      = mysqli_connect($host, $uname, $pwd, $database);

        mysqli_set_charset($this->con, 'utf8'); // Especifica o Charset.
        if($this->con->connect_error) { die("Falha ao realizar conexão: " . $this->con->connect_error); } // Se houver algum erro na conexão.

        $sql = "SHOW TABLES"; $select = $this->con->query($sql); // Resgatar um array das tabelas disponíveis no banco de dados.
        if ($select) {
            while($linha = mysqli_fetch_array($select, MYSQLI_NUM)) { // Pega uma linha por cada vez no registro (Anotação: MYSQLI_ASSOC = Nome ; MYSQLI_NUM = Números)
                $this->tabelas[] = $linha[0];  // Pega do primeiro registro da linha (o nome da tabela) e insere no array tabelas.
            }
        } else { $this->error_msg(); }

    }

    function error_msg() { echo "Erro: " . $sql . "<br>" . $this->$con->error; } // Mensagem de erro.

    function inserir($table_name, $values) { // Atributos e valores DEVEM ser arrays de dados para que possam ser compatíveis universalmente.

        // Olá! Houve uma atualização neste código. Após descobrir que é possível definir e resgatar o indíce de um array, eu decidi que iriamos importar somente um array para a função.
        // Mas se você precisar, eu fiz uma função mais abaixo nesta mesma biblioteca pra converter pra você inserir nessa função. Se chama conversion_index() :)

        $attributes_string = implode(',', array_keys($values)); // Converte o array de atributos em uma string.
        $values_string = "'" . implode("','", $values) . "'"; // Converte o array de valores em uma string.
    
        // Insere os dados na tabela
        $query = "INSERT INTO $table_name ($attributes_string) VALUES ($values_string)";
        echo $query;
        mysqli_query($this->con, $query);

        // Feedback
        return "Usuário incluido com sucesso.";
    }

    function exibir($tabela) {
        $sql = "SELECT * FROM $tabela"; $select = $this->con->query($sql); // Utilizando o comando SELECT.
        if ($select) {
            while($linha = mysqli_fetch_array($select, MYSQLI_ASSOC)) { $array[] = $linha; } // Ele irá ler cada linha gerada na variável $linha individualmente e colocará dentro do $array, formando assim uma matriz com $array.
            if(isset($array)) { return $array; } // Faz uma checagem se o array foi declarado ou recebeu algum valor, então retorna a variável se for verdade.
            else { return "Erro: Nenhum valor encontrado."; } // Se nenhum valor for encontrado, ou algo der errado com o $array. Ele irá retornar um erro.
        } else { $this->error_msg(); }
    }

    function excluir($tabela, $onde) {
        foreach ($onde as $referencia => $pesquisa) { $where[] = "$referencia = '$pesquisa'"; } // Converte no formato MYSQL.
        $where = implode(" AND ", $where); // Então converte em string para o uso no comando.

        $sql = "DELETE FROM $tabela WHERE $where"; // Comando para deletar o registro baseado em um valor dentro do registro.
        if($this->con->query($sql) === TRUE) { return "Usuário excluído com sucesso!<br>"; } else { $this->error_msg(); } // Retorna um feedback se requisitado.
    }

    function descrever($tabela) {
        $sql = "SHOW FIELDS FROM $tabela"; 
        $select = $this->con->query($sql);

        if ($select) {
            while($linha = mysqli_fetch_array($select)) { $array[] = $linha[0]; } // Pega todos os nomes dos atributos de uma tabela e bota em um array.
            return $array;
        } else { $this->error_msg(); }
    }

    function buscar($tabela, $atributos, $pesquisa) {
        $attributes_string = implode(',', $atributos); // Converte o array de atributos em uma string.
        foreach ($pesquisa as $referencia => $pesquisa) { $where[] = "$referencia = '$pesquisa'"; } // Converte no formato MYSQL.
        $where = implode(" AND ", $where); // Então converte em string para o uso no comando.

        $sql = "SELECT ". $attributes_string ." FROM $tabela WHERE $where";
        $select = $this->con->query($sql);

        if($select) {
            while($linha = mysqli_fetch_array($select, MYSQLI_ASSOC)) { $array[] = $linha; }
            if(isset($array)) { return $array; } // Faz uma checagem se o array foi declarado ou recebeu algum valor, então retorna a variável se for verdade.
            else { return "Erro: Nenhum valor encontrado."; } // Se nenhum valor for encontrado, ou algo der errado com o $array. Ele irá retornar um erro.
        } else { $this-error_msg(); }
    }

    function buscar_como($tabela, $atributos, $pesquisa) {
        $attributes_string = implode(',', $atributos); // Converte o array de atributos em uma string.
        foreach ($pesquisa as $referencia => $pesquisa) { $where[] = "$referencia LIKE '%$pesquisa%'"; } // Converte no formato MYSQL.
        $where = implode(" AND ", $where); // Então converte em string para o uso no comando.

        $sql = "SELECT ". $attributes_string ." FROM $tabela WHERE $where";
        $select = $this->con->query($sql);

        if($select) {
            while($linha = mysqli_fetch_array($select, MYSQLI_ASSOC)) { $array[] = $linha; }
            if(isset($array)) { return $array; } // Faz uma checagem se o array foi declarado ou recebeu algum valor, então retorna a variável se for verdade.
            else { return "Erro: Nenhum valor encontrado."; } // Se nenhum valor for encontrado, ou algo der errado com o $array. Ele irá retornar um erro.
        } else { $this-error_msg(); }
    }

    function alterar($tabela, $valores, $pesquisa) {
        // Montar a lista de atributos e valores a serem atualizados
        foreach ($valores as $atributo => $valor) { $set[] = "$atributo = '$valor'"; } // Converte no formato MYSQL.
        $set = implode(", ", $set); // Então converte em string para o uso no comando.

        foreach ($pesquisa as $referencia => $pesquisa) { $where[] = "$referencia = '$pesquisa'"; } // Converte no formato MYSQL.
        $where = implode(" AND ", $where); // Então converte em string para o uso no comando.

        $sql = "UPDATE $tabela SET $set WHERE $where";
        if($conexao->query($sql) === TRUE){ return "Registro alterado com sucesso!"; } else { $this->error_msg(); }
    }

}

function conversion_index($index, $valores) {
    foreach($valores as $indice => $valor) { $array[$index[$indice]] = $valor; }
    return $array;
}

?>

